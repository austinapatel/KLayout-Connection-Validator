<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description/>
 <version/>
 <category>drc</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name>drc_scripts</group-name>
 <menu-path>tools_menu.drc.end</menu-path>
 <interpreter>dsl</interpreter>
 <dsl-interpreter-name>drc-dsl-xml</dsl-interpreter-name>
 <text># See description on Github for functionality.

# IMPORTS
require 'set'

# HELPERS
$passed = true
def error(msg)
  puts "ERROR: " + msg
  $passed = false
end

# LOAD LAYERS
trench_raw = input(0, 0)
nottrench = input(1, 0)
retrench = input(2, 0) 
soi_raw = input(3, 0)
soi_labels = labels(3, 1)
soihole = input(4, 0)
resoi = input(5, 0)
metal_raw = input(6, 0)
metalhole = input(7, 0)
remetal = input(8, 0)
dummy = input(9, 0)
notdummy = input(10, 0)
trenchEx = input(11, 0)
soiEx = input(12, 0)
metalEx = input(13, 0)

# do layer math
trench = (trench_raw - nottrench) + retrench - trenchEx
soi = (soi_raw - soihole) + resoi + (dummy - notdummy) - soiEx
metal = (metal_raw - metalhole) + remetal - metalEx

# CONNECT LAYERS
connect(soi, soi_labels)
connect(metal, soi)

# REPORTING
report("MEMS Connection validator")
report_netlist

# CONNECTION CHECKS
net_names = Set.new()
netlist.each_circuit do |cir|  
  cir.each_net do |net|
    if net.name.include? ","
      error("pins " + net.name + " are overlapping")
    end
    
    if net_names.include? net.name and net.name != ""
      error(net.name + " has unconnected pieces")
    else
      net_names.add(net.name)
    end
  end
end

# FINAL MESSAGE
if $passed
  puts "Process completed with no errors!"
else
  puts "Process completed with errors."
end

puts "-----------------------------------------------------"
</text>
</klayout-macro>
